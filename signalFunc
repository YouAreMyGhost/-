#include<stdio.h>
#include<unistd.h>
#include<signal.h>
void show_pending(sigset_t *pending)
{
  int sig=1;
  for(;sig<=31;sig++){
    //如果阻塞，返回1，未阻塞返回0；
    if(sigismember(pending,sig)){
      printf("1");
    }
    else{
      printf("0");
    }
  }
  printf("\n");
}
int main()
{
  sigset_t pending;
  //将2号信号屏蔽，在键入2号信号时它永远不会被递达，
  //进入死循环while之后首先32个信号全为0，键入2号信号后第二位显示为1，表示已经被屏蔽
  sigset_t block,oblock;
  //初始化
  sigisemptyset(&block);
  sigisemptyset(&oblock);
  //在信号集block中添加2号信号
  sigaddset(&block,2);
  //设置信号屏蔽字，并返回老的信号屏蔽字
  sigprocmask(SIG_SETMASK,&block,&oblock);
  while(1){
  	//初始化
    sigemptyset(&pending);
    //读取未决信号集
    sigpending(&pending);
    show_pending(&pending);
    sleep(1);
  }
  return 0;
}
